// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id         Int            @id @default(autoincrement())
  name       String
  adress     String
  city       String
  email      String         @unique
  phone      String         @unique
  birthDate  DateTime
  admission  DateTime
  cpf        String         @unique
  rg         String         @unique
  employer   Employer
  department Department
  function   Function
  status     Status
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  epies      EpiEmployee[]
  exams      ExamEmployee[]
}

model Epi {
  id            Int           @id @default(autoincrement())
  name          String
  description   String
  certification String
  supplier      String
  expiration    DateTime
  quantity      Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  employees     EpiEmployee[]
  entries       EpiEntry[]
}

model EpiEmployee {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  epi        Epi      @relation(fields: [epiId], references: [id])
  epiId      Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model EpiEntry {
  id         Int      @id @default(autoincrement())
  epi        Epi      @relation(fields: [epiId], references: [id])
  epiId      Int
  quantity   Int
  date       DateTime @default(now())
  note       String?
  supplier   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Exam {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  type        String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  employees   ExamEmployee[]
}

model ExamEmployee {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  exam       Exam     @relation(fields: [examId], references: [id])
  examId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Employer {
  GlÃªnio
  Guilhermo
  Vagner
  Valmor
  Werner
}

enum Department {
  Pinheirinhos
  Unidade
  Guajuvira
}

enum Function {
  Gerente
  Supervisor
  Coordenador
  Analista
  Assistente
}

enum Status {
  Ativo
  Inativo
}
